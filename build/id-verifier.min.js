const e={PHOTO_ID:"org.iso.23220.photoid.1",EU_PERSONAL_ID:"eu.europa.ec.eudi.pid.1",JAPAN_MY_NUMBER_CARD:"org.iso.23220.1.jp.mnc",MOBILE_DRIVERS_LICENSE:"org.iso.18013.5.1.mDL"},r={OPENID4VP:"openid4vp",MDOC:"org-iso-mdoc"},t="mso_mdoc",o="dc+sd-jwt",s="ldp_vc",i="jwt_vc_json",n={[r.OPENID4VP]:[t,o,s,i],[r.MDOC]:[t]},a={GIVEN_NAME:"givenName",FAMILY_NAME:"familyName",FULL_NAME:"fullName",BIRTH_DATE:"birthDate",AGE:"age",AGE_OVER_18:"ageOver18",AGE_OVER_21:"ageOver21",ADDRESS:"address",CITY:"city",STATE:"state",POSTAL_CODE:"postalCode",COUNTRY:"country",NATIONALITY:"nationality",GENDER:"gender",PLACE_OF_BIRTH:"placeOfBirth",DOCUMENT_NUMBER:"documentNumber",ISSUING_AUTHORITY:"issuingAuthority",ISSUE_DATE:"issueDate",EXPIRY_DATE:"expiryDate",PORTRAIT:"portrait",SIGNATURE:"signature"},c={[t]:{[e.MOBILE_DRIVERS_LICENSE]:{[a.GIVEN_NAME]:["org.iso.18013.5.1","given_name"],[a.FAMILY_NAME]:["org.iso.18013.5.1","family_name"],[a.FULL_NAME]:["org.iso.18013.5.1","name_national_character"],[a.BIRTH_DATE]:["org.iso.18013.5.1","birthdate"],[a.AGE]:["org.iso.18013.5.1","age"],[a.AGE_OVER_18]:["org.iso.18013.5.1","age_over_18"],[a.AGE_OVER_21]:["org.iso.18013.5.1","age_over_21"],[a.ADDRESS]:["org.iso.18013.5.1","resident_address"],[a.CITY]:["org.iso.18013.5.1","resident_city"],[a.STATE]:["org.iso.18013.5.1","resident_state"],[a.POSTAL_CODE]:["org.iso.18013.5.1","resident_postal_code"],[a.COUNTRY]:["org.iso.18013.5.1","issuing_country"],[a.NATIONALITY]:["org.iso.18013.5.1","nationality"],[a.GENDER]:["org.iso.18013.5.1","gender"],[a.PLACE_OF_BIRTH]:["org.iso.18013.5.1","birthplace"],[a.DOCUMENT_NUMBER]:["org.iso.18013.5.1","document_number"],[a.ISSUING_AUTHORITY]:["org.iso.18013.5.1","issuing_authority"],[a.ISSUE_DATE]:["org.iso.18013.5.1","issue_date"],[a.EXPIRY_DATE]:["org.iso.18013.5.1","expiry_date"],[a.PORTRAIT]:["org.iso.18013.5.1","portrait"],[a.SIGNATURE]:["org.iso.18013.5.1","signature_usual_mark"]}}},createRequestParams=(i={})=>{const{documentTypes:d=[e.MOBILE_DRIVERS_LICENSE],claims:u=[]}=i,l=Array.isArray(d)?d:[d],p=Object.values(e),E=l.filter(e=>!p.includes(e));if(E.length>0)throw new Error(`Invalid document types: ${E.join(", ")}`);const m=Object.values(a),_=u.filter(e=>!m.includes(e));if(_.length>0)throw new Error(`Invalid claims: ${_.join(", ")}`);const y=[];for(const e of Object.values(r)){const r=[];for(const i of n[e])for(const e of l){const n=[];if(u.forEach(r=>{const t=c[i]?.[e]?.[r];t&&n.push({path:t})}),n.length>0){const a={format:i,id:`cred_${i}`,claims:n,meta:{}};i===t?a.meta.doctype_value=e:i===o?a.meta.vct_values=[]:i===s&&(a.meta.type_values=[]),r.push(a)}}r.length>0&&y.push({protocol:e,data:{dcql_query:{credentials:r},nonce:generateNonce(),response_mode:"dc_api",response_type:"vp_token"}})}return{digital:{requests:y}}},getCredentials=async(e,r={})=>{const{timeout:t=3e5}=r;if("undefined"==typeof window)throw new Error("getCredentials can only be called in a browser environment");if(!navigator.credentials)throw new Error("Digital Credentials API not supported in this browser");try{const r={...e,mediation:"required",signal:AbortSignal.timeout(t)},o=await navigator.credentials.get(r);if(!o)throw new Error("No credential was provided by the user");return{id:o.id,type:o.type,data:o.data,protocol:o.protocol,timestamp:(new Date).toISOString()}}catch(e){if("AbortError"===e.name)throw new Error("Credential request timed out");if("NotAllowedError"===e.name)throw new Error("User denied credential request");if("NotSupportedError"===e.name)throw new Error("Credential type not supported");throw e}},verifyCredentials=async(e,r={})=>{const{expectedProtocol:t,expectedTypes:o=[],verifierId:s,trustedIssuers:i=[]}=r;try{if(!e||"object"!=typeof e)throw new Error("Invalid credential response");if(!e.data)throw new Error("Credential response missing data");if(t&&e.protocol!==t)throw new Error(`Protocol mismatch: expected ${t}, got ${e.protocol}`);const r=e.data,n=await verifyCredentialByProtocol(r,e.protocol,{expectedTypes:o,verifierId:s,trustedIssuers:i}),a=extractIdInformation(r,e.protocol);return{verified:!0,protocol:e.protocol,credentialId:e.id,timestamp:e.timestamp,verificationDetails:n,idInformation:a}}catch(e){return{verified:!1,error:e.message,timestamp:(new Date).toISOString()}}},verifyCredentialByProtocol=async(e,t,o)=>{switch(t){case r.MDOC:return verifyMDocCredential(e,o);case r.W3C_VC:return verifyW3CCredential(e,o);case r.ISO_18013_5:return verifyISO18013Credential(e,o);default:throw new Error(`Unsupported protocol: ${t}`)}},verifyMDocCredential=async(e,t)=>{if(!e.documents||!Array.isArray(e.documents))throw new Error("Invalid mDoc structure: missing documents array");const o=[];for(const r of e.documents){if(!r.docType)throw new Error("Invalid mDoc document: missing docType");if(t.expectedTypes.length>0&&!t.expectedTypes.includes(r.docType))throw new Error(`Unexpected document type: ${r.docType}`);if(t.trustedIssuers.length>0&&r.issuer&&!t.trustedIssuers.includes(r.issuer))throw new Error(`Untrusted issuer: ${r.issuer}`);o.push({docType:r.docType,issuer:r.issuer,valid:!0})}return{protocol:r.MDOC,documentsVerified:o.length,verificationResults:o}},verifyW3CCredential=async(e,t)=>{if(!e.credential)throw new Error("Invalid W3C VC structure: missing credential");const o=e.credential;if(!o.type||!Array.isArray(o.type))throw new Error("Invalid W3C VC: missing or invalid type");if(!o.issuer)throw new Error("Invalid W3C VC: missing issuer");if(t.expectedTypes.length>0){if(!t.expectedTypes.some(e=>o.type.includes(e)))throw new Error(`Unexpected credential type: ${o.type.join(", ")}`)}if(t.trustedIssuers.length>0){const e="string"==typeof o.issuer?o.issuer:o.issuer.id;if(!t.trustedIssuers.includes(e))throw new Error(`Untrusted issuer: ${e}`)}return{protocol:r.W3C_VC,credentialType:o.type,issuer:o.issuer,valid:!0}},verifyISO18013Credential=async(e,t)=>{if(!e.mobileSecurityObject)throw new Error("Invalid ISO 18013-5 structure: missing mobileSecurityObject");const o=e.mobileSecurityObject;if(!o.version)throw new Error("Invalid ISO 18013-5: missing version");if(e.documents)for(const r of e.documents)if(t.expectedTypes.length>0&&!t.expectedTypes.includes(r.docType))throw new Error(`Unexpected document type: ${r.docType}`);return{protocol:r.ISO_18013_5,version:o.version,valid:!0}},extractIdInformation=(e,t)=>{const o={protocol:t,documents:[],personalInfo:{},extractedAt:(new Date).toISOString()};switch(t){case r.MDOC:if(e.documents)for(const r of e.documents){const e={docType:r.docType,issuer:r.issuer,attributes:{}};if(r.attributes)for(const[t,o]of Object.entries(r.attributes))o&&o.value&&(e.attributes[t]=o.value);o.documents.push(e)}break;case r.W3C_VC:e.credential&&e.credential.credentialSubject&&(o.personalInfo=e.credential.credentialSubject);break;case r.ISO_18013_5:if(e.documents)for(const r of e.documents){const e={docType:r.docType,attributes:{}};if(r.attributes)for(const[t,o]of Object.entries(r.attributes))o&&o.value&&(e.attributes[t]=o.value);o.documents.push(e)}}return o},generateNonce=()=>{const e=new Uint8Array(16);if("undefined"!=typeof crypto&&crypto.getRandomValues)crypto.getRandomValues(e);else for(let r=0;r<e.length;r++)e[r]=Math.floor(256*Math.random());return Array.from(e,e=>e.toString(16).padStart(2,"0")).join("")},verify=()=>{console.log("TODO: This function is deprecated. Use verifyCredentials instead.")};export{e as DocumentType,a as SupportedClaim,createRequestParams,getCredentials,verify,verifyCredentials};
